
@using Sharpy
@using BackendAPI.Objects
@using BackendProxy
@using BackendAPI
@using BackendAPI.Events
@using BackendAPI.Pages.Shared
@using System.Diagnostics
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime

@namespace BlazorServerSample.Pages



<button @onclick="WriteToConsole">Run</button>

@code {

    private async Task WriteToConsole()
    {
        await JSRuntime.InvokeAsync<int>(
                 "ClearBackground",
                 1);
    }
}
@code{

    protected override  async Task OnAfterRenderAsync(bool test)
    {
        StateHasChanged();
        //setInterval(atualizarDefinicao, 3000);
        Wrapper.events.On("deckitemsingleclearpacket", async  (e) =>
        {
            Debug.WriteLine("CLEANIG PACKET..");
            // Cast event argrument to your event object
            var obj = (DeckItemClearSinglePacket)e;




            // ClearBackground(obj.SlotID);

            await  JSRuntime.InvokeAsync<int>(
                       "ClearBackground",
                       obj.SlotID);


        });

        Wrapper.events.On("deckitemsinglechangepacket", async (e) =>
        {
            Debug.WriteLine("CHANGE PACKET..");
            // Cast event argrument to your event object
            var obj = (DeckItemSinglePacket)e;


            // ClearBackground(obj.SlotID);


            await JSRuntime.InvokeAsync<int>(
                                  "ClearBackground",
                                  obj.ImageSlot);


        });
        await Task.Delay(1);
    }

}

